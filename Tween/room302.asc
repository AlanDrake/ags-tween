// room script file

function testViewport(Viewport* viewport) {
  int r = 2;
  viewport.TweenWidth(1.0, Screen.Width / r, eEaseOutBounceTween);
  viewport.TweenHeight(1.0, Screen.Height / r, eEaseOutBounceTween);
  viewport.TweenX(1.0, Screen.Width / r, eEaseOutBounceTween);
  viewport.TweenY(1.0, Screen.Height / r, eEaseOutBounceTween);
  viewport.TweenPosition(1.0, 0, 0, Screen.Width, Screen.Height, eEaseInOutBackTween);
  viewport.TweenPosition(1.0, Screen.Width / r, Screen.Height / r, Screen.Width / r*2, Screen.Height / r*2, eEaseInOutBackTween);
}

function testScreenViewport() {
  testViewport(Screen.Viewport);

  Camera* camera = Camera.Create();
  camera.SetAt(0, 0);
  camera.SetSize(Screen.Width, Screen.Height);
  Viewport* viewport = Viewport.Create();
  viewport.Camera = camera;
  viewport.SetPosition(0, 0, Screen.Width, Screen.Height);
  viewport.Visible = true;
  //testViewport(viewport);

  viewport.Delete();
  //Screen.Viewport.SetPosition(0, 0, Screen.Width, Screen.Height);
}

function testCamera() {
  Camera* camera = Screen.Viewport.Camera;
  camera.TweenX(1.0, Room.Width, eEaseOutBounceTween);
  camera.TweenY(1.0, Room.Height, eEaseOutBounceTween);
  camera.TweenWidth(1.0, Screen.Width / 2, eEaseOutBackTween);
  camera.TweenHeight(1.0, Screen.Height / 2, eEaseOutBackTween);
  camera.TweenPosition(1.0, 0, 0, eEaseOutQuadTween);
  camera.TweenSize(1.0, Screen.Width, Screen.Height, eEaseOutBackTween);
}

function room_AfterFadeIn()
{
  StartCutscene(eSkipESCOnly);
  for (int i = 0; i < 100; i++) {
    testCamera();
    testScreenViewport();
    testCamera();
    Screen.Viewport.TweenPosition(2.0, 0, 0, Screen.Viewport.Width, Screen.Viewport.Height, eEaseOutBounceTween);
    Screen.Viewport.TweenPosition(2.0, 0, 0, Screen.Width, Screen.Height, eEaseOutBounceTween);
  }
  EndCutscene();
  player.ChangeRoom(99);
}

function room_Load()
{
  Tween.IncreaseGameSpeed();
}

function room_FirstLoad()
{

}

function room_Leave()
{
  Tween.RestoreGameSpeed();
}

function room_RepExec()
{

}
