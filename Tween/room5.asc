// room script file

function ShowCurveGUI()
{
  mouse.Mode = eModePointer;
  gEasing.Visible = true;
  StartCurve();
}

function RunCustomTweenDemo()
{
  Tween.IncreaseGameSpeed();

  Tween myTweenX;
  Tween myTweenY;
  myTweenX.Init(3.0, 10, Screen.Width - 10);
  myTweenY.Init(3.0, 10, Screen.Height - 10, eEaseOutBounceTween);
  int previousX = FloatToInt(myTweenX.FromValue);
  int previousY = FloatToInt(myTweenY.FromValue);

  // .IsPlaying() returns true if the the tween is not finished.
  while (myTweenX.IsPlaying() || myTweenY.IsPlaying()) {
    // .Update() moves the tween one step forward in time.
    myTweenX.Update();
    myTweenY.Update();

    DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
    surface.DrawingColor = 15;
    surface.DrawLine(previousX, previousY, myTweenX.Value, myTweenY.Value, 2);
    surface.Release();

    // .Value contains the current value between the FromValue and ToValue.
    previousX = myTweenX.Value;
    previousY = myTweenY.Value;

    Wait(1);
  }

  Tween.RestoreGameSpeed();
}

function TweenIndyMapLine(int fromX, int fromY, int toX, int toY) {
  Tween.IncreaseGameSpeed();

  Tween myTweenX;
  Tween myTweenY;
  myTweenX.Init(3.0, fromX, toX);
  myTweenY.Init(3.0, fromY, toY);
  int previousX = FloatToInt(myTweenX.FromValue);
  int previousY = FloatToInt(myTweenY.FromValue);
  int drawColor = Game.GetColorFromRGB(255, 0, 0);

  while (myTweenX.IsPlaying() || myTweenY.IsPlaying()) {
    myTweenX.Update();
    myTweenY.Update();

    DrawingSurface *surface = Room.GetDrawingSurfaceForBackground();
    surface.DrawingColor = drawColor;
    surface.DrawLine(previousX, previousY, myTweenX.Value, myTweenY.Value, 3);
    surface.Release();

    previousX = myTweenX.Value;
    previousY = myTweenY.Value;

    Wait(1);
  }

  Tween.RestoreGameSpeed();
}

function room_AfterFadeIn()
{
  ShowCurveGUI();

  //RunCustomTweenDemo();
  //TweenIndyMapLine(0, 0, Screen.Width / 2, Screen.Height / 2);
  //TweenIndyMapLine(Screen.Width / 2, Screen.Height / 2, Screen.Width, Screen.Height / 2);
}
