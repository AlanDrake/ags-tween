// GUI Tests (room 6) script file

int _gTestX, _gTestY, _gTestWidth, _gTestHeight, _gBackgroundColor, _gBorderColor;

function SaveTestGUI() {
  _gTestX = gTest.X;
  _gTestY = gTest.Y;
  _gTestWidth = gTest.Width;
  _gTestHeight = gTest.Height;
  _gBackgroundColor = gTest.BackgroundColor;
  _gBorderColor = gTest.BorderColor;
}

function RestoreTestGUI() {
  gTest.X = _gTestX;
  gTest.Y = _gTestY;
  gTest.Width = _gTestWidth;
  gTest.Height = _gTestHeight;
  gTest.BackgroundColor = _gBackgroundColor;
  gTest.BorderColor = _gBorderColor;
}

int UpdateRedInColor(int color, int red) {
  return Game.GetColorFromRGB(red, TweenGame.GetGFromColor(color), TweenGame.GetBFromColor(color));
}

int UpdateGreenInColor(int color, int green) {
  return Game.GetColorFromRGB(TweenGame.GetRFromColor(color), green, TweenGame.GetBFromColor(color));
}

int UpdateBlueInColor(int color, int blue) {
  return Game.GetColorFromRGB(TweenGame.GetRFromColor(color), TweenGame.GetGFromColor(color), blue);
}

int UpdateRedInBackgroundColor(int red) { return UpdateRedInColor(_gBackgroundColor, red); }
int UpdateGreenInBackgroundColor(int green) { return UpdateGreenInColor(_gBackgroundColor, green); }
int UpdateBlueInBackgroundColor(int blue) { return UpdateBlueInColor(_gBackgroundColor, blue); }

int UpdateRedInBorderColor(int red) { return UpdateRedInColor(_gBorderColor, red); }
int UpdateGreenInBorderColor(int green) { return UpdateGreenInColor(_gBorderColor, green); }
int UpdateBlueInBorderColor(int blue) { return UpdateBlueInColor(_gBorderColor, blue); }

function testGUIBounds() {
  Test("GUI Bounds");
  gTest.TweenPosition(0.5, -GetScreenWidth(), -GetScreenHeight());
  ExpectIntToBe("X", gTest.X, -GetScreenWidth());
  ExpectIntToBe("Y", gTest.Y, -GetScreenHeight());

  gTest.TweenPosition(0.5, GetScreenWidth() + 1, GetScreenHeight() + 1);
  #ifdef SCRIPT_API_v350
  ExpectIntToBe("X", gTest.X, GetScreenWidth() + 1);
  ExpectIntToBe("Y", gTest.Y, GetScreenHeight() + 1);
  #endif
  #ifndef SCRIPT_API_v350
  ExpectIntToBe("X", gTest.X, GetScreenWidth() - 1);
  ExpectIntToBe("Y", gTest.Y, GetScreenHeight() - 1);
  #endif

  RestoreTestGUI();

  gTest.TweenSize(1.0, 0, 0);
  ExpectIntToBe("Width is 1", gTest.Width, 1);
  ExpectIntToBe("Height is 1", gTest.Height, 1);

  gTest.TweenSize(1.0, GetScreenWidth() * 2, GetScreenHeight() * 2);
  #ifdef SCRIPT_API_v350
  ExpectIntToBe("Width", gTest.Width, GetScreenWidth() * 2);
  ExpectIntToBe("Height", gTest.Height, GetScreenHeight() * 2);
  #endif
  #ifndef SCRIPT_API_v350
  ExpectIntToBe("Width", gTest.Width, GetScreenWidth());
  ExpectIntToBe("Height", gTest.Height, GetScreenHeight());
  #endif

  RestoreTestGUI();
}

function testBackgroundColor() {
  SaveTestGUI();
  Test("GUI.BackgroundColor");

  int expectedColor = UpdateRedInBackgroundColor(128);
  gTest.TweenBackgroundColorRed(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Red", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateGreenInBackgroundColor(128);
  gTest.TweenBackgroundColorGreen(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Green", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateBlueInBackgroundColor(128);
  gTest.TweenBackgroundColorBlue(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Blue", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  int toColor = Game.GetColorFromRGB(64, 128, 255);

  gTest.TweenBackgroundColor(0.5, toColor, eEaseInBackTween);
  ExpectIntToBe("Color", gTest.BackgroundColor, toColor);

  RestoreTestGUI();

  gTest.TweenBackgroundColorRGB(0.5, 64, 128, 255, eEaseInBackTween);
  ExpectIntToBe("ColorRGB", gTest.BackgroundColor, toColor);

  RestoreTestGUI();

  expectedColor = UpdateRedInBackgroundColor(128);
  int lerpColor = Game.GetColorFromRGB(
    TweenMaths.ClampInt(0, TweenMaths.Lerp(IntToFloat(TweenGame.GetRFromColor(gTest.BackgroundColor)), 128.0, 1.0), 255),
    TweenGame.GetGFromColor(gTest.BackgroundColor),
    TweenGame.GetBFromColor(gTest.BackgroundColor)
  );
  gTest.TweenBackgroundColorRed(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBackgroundColorRed(eFinishTween);
  ExpectIntToBe("R Finish", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateGreenInBackgroundColor(128);
  gTest.TweenBackgroundColorGreen(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBackgroundColorGreen(eFinishTween);
  ExpectIntToBe("G Finish", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateBlueInBackgroundColor(128);
  gTest.TweenBackgroundColorBlue(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBackgroundColorBlue(eFinishTween);
  ExpectIntToBe("B Finish", gTest.BackgroundColor, expectedColor);

  RestoreTestGUI();

  gTest.TweenBackgroundColor(0.5, toColor, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBackgroundColor(eFinishTween);
  ExpectIntToBe("Color Finish", gTest.BackgroundColor, toColor);

  RestoreTestGUI();

  gTest.TweenBackgroundColorRGB(0.5, 64, 128, 255, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBackgroundColor(eFinishTween);
  ExpectIntToBe("ColorRGB Finish", gTest.BackgroundColor, toColor);

  RestoreTestGUI();
}

function testBorderColor() {
  SaveTestGUI();
  Test("GUI.BorderColor");

  int expectedColor = UpdateRedInBorderColor(128);
  gTest.TweenBorderColorRed(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Red", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateGreenInBorderColor(128);
  gTest.TweenBorderColorGreen(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Green", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateBlueInBorderColor(128);
  gTest.TweenBorderColorBlue(0.5, 128, eEaseInBackTween);
  ExpectIntToBe("Blue", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  int toColor = Game.GetColorFromRGB(64, 128, 255);

  gTest.TweenBorderColor(0.5, toColor, eEaseInBackTween);
  ExpectIntToBe("Color", gTest.BorderColor, toColor);

  RestoreTestGUI();

  gTest.TweenBorderColorRGB(0.5, 64, 128, 255, eEaseInBackTween);
  ExpectIntToBe("ColorRGB", gTest.BorderColor, toColor);

  RestoreTestGUI();

  expectedColor = UpdateRedInBorderColor(128);
  gTest.TweenBorderColorRed(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBorderColorRed(eFinishTween);
  ExpectIntToBe("R Finish", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateGreenInBorderColor(128);
  gTest.TweenBorderColorGreen(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBorderColorGreen(eFinishTween);
  ExpectIntToBe("G Finish", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  expectedColor = UpdateBlueInBorderColor(128);
  gTest.TweenBorderColorBlue(0.5, 128, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBorderColorBlue(eFinishTween);
  ExpectIntToBe("B Finish", gTest.BorderColor, expectedColor);

  RestoreTestGUI();

  gTest.TweenBorderColor(0.5, toColor, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBorderColor(eFinishTween);
  ExpectIntToBe("Color Finish", gTest.BorderColor, toColor);

  RestoreTestGUI();

  gTest.TweenBorderColorRGB(0.5, 64, 128, 255, eEaseLinearTween, eNoBlockTween);
  gTest.StopTweenBorderColor(eFinishTween);
  ExpectIntToBe("ColorRGB Finish", gTest.BorderColor, toColor);

  RestoreTestGUI();
}

function room_AfterFadeIn()
{
  StartCutscene(eSkipESCOnly);

  testGUIBounds();
  testBackgroundColor();
  testBorderColor();

  EndCutscene();
  player.ChangeRoom(99);
}

function room_Load()
{
  SaveTestGUI();
  gTest.Visible = true;
}

function room_Leave()
{
  gTest.Visible = false;
  RestoreTestGUI();
}

function room_RepExec()
{

}
