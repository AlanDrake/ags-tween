DynamicSprite* _sprite;

function DrawTweens() {
  if (!gTweenDebug.Visible) {
    if (_sprite == null) {
      _sprite = DynamicSprite.Create(Screen.Width, Screen.Height);
      gTweenDebug.BackgroundGraphic = _sprite.Graphic;
    }
    gTweenDebug.Visible = true;
    gTweenDebug.X = 0;
    gTweenDebug.Y = 0;
    gTweenDebug.Width = Screen.Width;
    gTweenDebug.Height = Screen.Height;
  }

  DrawingSurface* surface = _sprite.GetDrawingSurface();
  surface.Clear();

  for (_i = 0; _i < Tween_MAX_INSTANCES; _i++) {
    if (_tweens[_i].IsPlaying()) {
      if (_tweens[_i].Type == _eTweenObjectPosition) {
        surface.DrawingColor = Game.GetColorFromRGB(255, 255, 255);
        int prevX = object[_tweens[_i].RefID].X;
        int prevY = object[_tweens[_i].RefID].Y;
        for (float j = 0.0; j < _tweens[_i].Duration; j++) {
          float amount = TweenEasing.GetValue(j, _tweens[_i].Duration, _tweens[_i].EasingType);
          float linearAmount = TweenEasing.GetValue(j, _tweens[_i].Duration, eEaseLinearTween);
          int x, y;
          if (_tweens[_i].FromValue != _tweens[_i].ToValue) {
            x = TweenMaths.Lerp(_tweens[_i].FromValue, _tweens[_i].ToValue, amount);
          }
          else {
            x = TweenMaths.Lerp(_tweens[_i].FromValue, _tweens[_i].ToValue, linearAmount);
          }
          if (_tweens[_i].FromValue2 != _tweens[_i].ToValue2) {
            y = TweenMaths.Lerp(_tweens[_i].FromValue2, _tweens[_i].ToValue2, amount);
          }
          else {
            y = TweenMaths.Lerp(_tweens[_i].FromValue2, _tweens[_i].ToValue2, linearAmount);
          }

          //surface.DrawLine(prevX, prevY, x, y, 1);
          surface.DrawPixel(x, y);
          prevX = x;
          prevY = y;
        }
      }
    }
  }

  surface.Release();
}
